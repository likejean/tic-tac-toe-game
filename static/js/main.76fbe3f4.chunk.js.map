{"version":3,"sources":["assets/images/cross.png","assets/images/zero.png","assets/images/o_win.png","assets/images/x_win.png","components/Board/Square/Cross/Cross.js","components/Board/Square/Zero/Zero.js","components/Board/Square/Win/Win.js","components/Board/Square/Square.js","actions/boardAction.js","helpers/actionTypes.js","actions/playerAction.js","helpers/checkWins.js","components/Board/Summary/Summary.js","actions/resultsAction.js","components/Board/Inputs/PlayerNames.js","components/Board/Board.js","App.js","reducers/boardReducer.js","reducers/playerReducer.js","reducers/resultReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","className","src","cross","alt","zero","props","winner","crossWin","zeroWin","ReactTooltip","styled","OriginalReactTooltip","attrs","connect","board","players","result","dispatch","drawSymbol","cellIndex","turn","Promise","resolve","type","console","log","drawXAction","drawOAction","toggleTurnAction","symbol","gameOver","win","winCombo","gameStart","disabled","Fragment","data-tip","onClick","then","e","preventDefault","map","elem","Win","key","Cross","Zero","data-background-color","winsOptions","checkVictory","wins","i","length","combo","checkGameResult","payload","filter","tie","player1_name","player1","style","width","marginLeft","player2_name","player2","id","changePlayer1Name","name","target","value","changePlayer2Name","onChange","aria-label","aria-describedby","startGame","resetGame","resetResult","border","backgroundColor","Summary","App","Board","initialState","Array","keys","combineReducers","state","action","stateByX","stateByO","player","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","rootReducer","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76fbe3f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.ed5887be.png\";","module.exports = __webpack_public_path__ + \"static/media/zero.8ab09cb2.png\";","module.exports = __webpack_public_path__ + \"static/media/o_win.a870b23c.png\";","module.exports = __webpack_public_path__ + \"static/media/x_win.73e47f00.png\";","import React from 'react';\r\nimport cross from '../../../../assets/images/cross.png'\r\nimport './style.css';\r\nexport default () => {\r\n    return (\r\n        <div className='cross symbol text-center'>\r\n            <img className='cross' src={cross} alt='cross'/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport zero from \"../../../../assets/images/zero.png\";\r\nimport './style.css';\r\nexport default () => {\r\n    return (\r\n        <div className='zero symbol text-center'>\r\n            <img className='zero' src={zero} alt='zero'/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport zeroWin from '../../../../assets/images/o_win.png';\r\nimport crossWin from '../../../../assets/images/x_win.png';\r\nimport './style.css';\r\nexport default props => {\r\n    const { winner } = props;\r\n    return (\r\n        <div className='cross symbol text-center'>\r\n            <img className='cross' src={ winner ==='X' ? crossWin : zeroWin} alt='cross'/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Cross from './Cross/Cross';\r\nimport Zero from './Zero/Zero';\r\nimport Win from './Win/Win';\r\nimport styled from \"styled-components\";\r\nimport OriginalReactTooltip from \"react-tooltip\";\r\nimport { connect } from 'react-redux';\r\nimport { drawXAction, drawOAction } from \"../../../actions/boardAction\";\r\nimport {toggleTurnAction} from \"../../../actions/playerAction\";\r\n\r\nexport const ReactTooltip = styled(OriginalReactTooltip).attrs({\r\n    className: \"custom-tooltip\",\r\n})`\r\n    &.custom-tooltip {\r\n        background-color: grey;\r\n        color: white;\r\n        font-size: 25px;  \r\n        border-radius: 15px;      \r\n    }\r\n`;\r\n\r\nfunction Square (props) {\r\n\r\n    const { symbol, cellIndex, gameOver, drawSymbol, players, board, result: {win, winCombo, gameStart}, toggleTurnAction } = props;\r\n\r\n    const disabled = symbol || gameOver ? 'disabled' : '';\r\n    return (\r\n        <React.Fragment>\r\n            <div\r\n                className={`cell ${disabled}`}\r\n                data-tip=\"CLICK 'START GAME'\"\r\n                onClick={gameStart\r\n                    ? () => drawSymbol(board, players, cellIndex).then(() => {toggleTurnAction();})\r\n                    : e => e.preventDefault()\r\n                }\r\n            >\r\n                {symbol && gameStart ?\r\n                    !gameOver ?\r\n                        (symbol === 'X'\r\n                            ? <Cross />\r\n                            : <Zero />)\r\n                        : winCombo.map(elem => elem === cellIndex ? <Win key={elem} winner={win} /> : null)\r\n                    : ''\r\n                }\r\n            </div>\r\n            {!gameStart && <ReactTooltip data-background-color='red' />}\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ({ board, players, result }) => ({ board, players, result });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    drawSymbol: (board, players, cellIndex) => {\r\n        if (players[players.turn] === 'X') {\r\n            return dispatch(drawXAction(cellIndex));\r\n        }else{\r\n            return dispatch(drawOAction(cellIndex))\r\n        }\r\n    },\r\n    toggleTurnAction: () => dispatch(toggleTurnAction())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Square);\r\n\r\n\r\n\r\n","import { DRAW_X, DRAW_O, RESET_GAME } from \"../helpers/actionTypes\";\r\n\r\nexport function drawXAction(cellIndex) {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            dispatch({\r\n                type: DRAW_X,\r\n                cellIndex\r\n            });\r\n            resolve(() => console.log(resolve));\r\n        })\r\n    }\r\n};\r\n\r\nexport function drawOAction(cellIndex) {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            dispatch({\r\n                type: DRAW_O,\r\n                cellIndex\r\n            });\r\n            resolve(() => console.log(resolve));\r\n        })\r\n    }\r\n};\r\n\r\nexport function resetGame() {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            dispatch({\r\n                type: RESET_GAME\r\n            });\r\n            resolve(() => console.log(resolve));\r\n        })\r\n    }\r\n};\r\n\r\n","export const DRAW_X = 'DRAW_X';\r\nexport const DRAW_O = 'DRAW_O';\r\nexport const RESET_GAME = 'RESET_GAME';\r\nexport const START_GAME = 'START_GAME';\r\n\r\nexport const PLAYER_X = 'PLAYER_X';\r\nexport const PLAYER_O = 'PLAYER_O';\r\nexport const PLAYER_NAME = 'PLAYER_NAME';\r\nexport const TURN = 'TURN';\r\n\r\nexport const X_WINS = 'X_WINS';\r\nexport const O_WINS = 'Y_WINS';\r\nexport const TIE = 'TIE';\r\nexport const IN_PROGRESS = 'IN_PROGRESS';\r\nexport const RESET_RESULT = 'RESET_RESULT';\r\n","import {PLAYER_X, PLAYER_O, PLAYER_NAME, TURN, START_GAME} from '../helpers/actionTypes';\r\n\r\n\r\nexport function changePlayer1Name(e) {\r\n    return {\r\n        type: PLAYER_NAME,\r\n        name: e.target.name,\r\n        value: e.target.value\r\n    }\r\n};\r\n\r\nexport function changePlayer2Name(e) {\r\n    return {\r\n        type: PLAYER_NAME,\r\n        name: e.target.name,\r\n        value: e.target.value\r\n    }\r\n};\r\n\r\nexport function selectXPlayerAction(player) {\r\n    return {\r\n        type: PLAYER_X,\r\n        player\r\n    }\r\n};\r\n\r\nexport function selectOPlayerAction(player) {\r\n    return {\r\n        type: PLAYER_O,\r\n        player\r\n    }\r\n};\r\n\r\nexport function toggleTurnAction() {\r\n    return {\r\n        type: TURN\r\n    }\r\n};\r\n\r\nexport function startGame() {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            dispatch({\r\n                type: START_GAME\r\n            });\r\n            resolve(() => console.log(resolve));\r\n        })\r\n    }\r\n};\r\n\r\n\r\n","export const winsOptions = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n];\r\n\r\n\r\nexport const checkVictory = (wins, board, symbol) => {\r\n    for (let i = 0; i < wins.length; i++){\r\n        if (board[wins[i][0]] === symbol && board[wins[i][1]] === symbol && board[wins[i][2]] === symbol) return { win: true, combo: wins[i] };\r\n    }\r\n    return { win: false, combo: null };\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport cross from '../../../assets/images/cross.png';\r\nimport zero from '../../../assets/images/zero.png';\r\nimport { checkGameResult } from \"../../../actions/resultsAction\";\r\n\r\n\r\nexport default connect(\r\n    ({board, players, result}) => ({board, players, result}),\r\n    dispatch => ({ checkGameResult: board => dispatch(checkGameResult(board))})\r\n)\r\n(props => {\r\n    const {players, result, board, checkGameResult} = props;\r\n    if (!(result.win || result.tie)) checkGameResult(board);\r\n\r\n    return (\r\n        <div className=\"players-info mt-6\">\r\n            <div className=\"col\">\r\n                <p>\r\n                    <span className=\"badge badge-pill badge-primary\">\r\n                        <strong>{players.player1_name ? players.player1_name : 'Player 1'}</strong>:\r\n                    </span> {players.player1 === 'X' &&\r\n                <img style={{width: 50, marginLeft: 40}} src={cross} alt='cross'/>}\r\n                </p>\r\n                <p><span className=\"badge badge-pill badge-danger\">\r\n                            <strong>{players.player2_name ? players.player2_name : 'Player 2'}</strong>:\r\n                        </span> {players.player2 === 'O' &&\r\n                <img style={{width: 50, marginLeft: 40}} src={zero} alt='zero'/>}\r\n                </p>\r\n                {result.gameOver\r\n                    ?\r\n                    <div id='game-over' className='alert alert-info mt-2'>GAME OVER</div>\r\n                    :   <p>\r\n                            <span className=\"badge badge-xl badge-pill badge-light\">\r\n                                <strong>Who's Turn</strong>:\r\n                            </span>\r\n                        {players.turn === 'player1'\r\n                            ?\r\n                            <span className=\"badge badge-pill badge-primary\">{players.player1_name ? players.player1_name : 'Player 1'}</span>\r\n                            :\r\n                            <span className=\"badge badge-pill badge-danger\">{players.player2_name ? players.player2_name : 'Player 2'}</span>\r\n                        }\r\n                    </p>\r\n                }\r\n\r\n                {!result.tie && result.win === null\r\n                    ?\r\n                    null\r\n                    :\r\n                    result.tie\r\n                        ?\r\n                        <div className='alert alert-success mt-2'>It's DRAW</div>\r\n                        :\r\n                        result.win === 'X'\r\n                            ?\r\n                            <div className='alert alert-success mt-2'>{players.player1 === 'X' ?\r\n                                <span className=\"badge badge-pill badge-primary\">{players.player1_name ? players.player1_name : 'Player 1'}</span>\r\n                                :\r\n                                <span className=\"badge badge-pill badge-danger\">{players.player2_name ? players.player2_name : 'Player 2'}</span>}\r\n                                WINS!\r\n                            </div>\r\n                            :\r\n                            <div className='alert alert-success mt-2'>{players.player2 === 'O' ?\r\n                                <span className=\"badge badge-pill badge-danger\">{players.player2_name ? players.player2_name : 'Player 2'}</span>\r\n                                :\r\n                                <span className=\"badge badge-pill badge-primary\">{players.player1_name ? players.player1_name : 'Player 1'}</span>}\r\n                                WINS!\r\n                            </div>\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n});","import { X_WINS, O_WINS, TIE, RESET_RESULT } from '../helpers/actionTypes';\r\nimport  { checkVictory, winsOptions } from '../helpers/checkWins';\r\n\r\nexport function checkGameResult(board) {\r\n\r\n    if(checkVictory(winsOptions, board, 'X').win) {\r\n        return {\r\n            type: X_WINS,\r\n            payload: checkVictory(winsOptions, board, 'X').combo\r\n        }\r\n    }else if(checkVictory(winsOptions, board, 'O').win) {\r\n        return {\r\n            type: O_WINS,\r\n            payload: checkVictory(winsOptions, board, 'O').combo\r\n        }\r\n    }else{\r\n        const checkBlankCells = board.filter(symbol => symbol === '');\r\n        if (checkBlankCells.length === 0){\r\n            return {\r\n                type: TIE\r\n            }\r\n        }\r\n        else {\r\n            return {\r\n                type: 'VOID'\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport function resetResult() {\r\n    return {\r\n        type: RESET_RESULT\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './style.css';\r\nimport {changePlayer1Name, changePlayer2Name} from \"../../../actions/playerAction\";\r\n\r\n\r\nexport default connect(\r\n    ({result, board, players}) => ({result, board, players}),\r\n    dispatch => (\r\n        {\r\n            changePlayer1Name: e => dispatch(changePlayer1Name(e)),\r\n            changePlayer2Name: e => dispatch(changePlayer2Name(e))\r\n        }\r\n    ))(props => {\r\n    const {players: {player1_name, player2_name}, changePlayer1Name, changePlayer2Name} = props;\r\n    return (\r\n        <React.Fragment>\r\n            <div className='container inputs'>\r\n                <div className='row'>\r\n                    <div className=\"col-6 input-group input-group-md mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Player 1</span>\r\n                        </div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name='player1_name'\r\n                            value={player1_name}\r\n                            className=\"form-control\"\r\n                            onChange={changePlayer1Name}\r\n                            aria-label=\"Sizing example input\"\r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-6 input-group input-group-md mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Player 2</span>\r\n                        </div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name='player2_name'\r\n                            value={player2_name}\r\n                            className=\"form-control\"\r\n                            onChange={changePlayer2Name}\r\n                            aria-label=\"Sizing example input\"\r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n});","import React from 'react';\r\nimport './style.css';\r\nimport {connect} from 'react-redux';\r\nimport Square from './Square/Square';\r\nimport Summary from '../Board/Summary/Summary';\r\nimport Inputs from '../Board/Inputs/PlayerNames';\r\nimport { resetGame } from '../../actions/boardAction';\r\nimport { resetResult } from '../../actions/resultsAction';\r\nimport { startGame } from \"../../actions/playerAction\";\r\n\r\nexport default connect(({board, result}) => ({board, result}),\r\n    dispatch => (\r\n        {\r\n            startGame: () => dispatch(startGame()),\r\n            resetGame: () => dispatch(resetGame()),\r\n            resetResult: () => dispatch(resetResult())\r\n        }\r\n    )\r\n)(props => {\r\n    //Get this from redux...\r\n    const {board, result, resetGame, resetResult, startGame} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Inputs/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <button disabled={result.gameStart} type=\"button\" onClick={() => startGame()} className=\"start btn btn-outline-dark\">START GAME</button>\r\n                    <button type=\"button\" onClick={() => resetGame().then(() => {resetResult();})} className=\"reset btn btn-outline-dark\">RESET GAME</button>\r\n                </div>\r\n            </div>\r\n            <div id='board' style={result.gameStart ? {border: \"1px solid black\", backgroundColor: '#FAF7F7'} : {border: \"1px solid lightgrey\", backgroundColor: 'white'}} className='mt-5 d-flex flex-wrap'>\r\n                {board.map((symbol, id) =>\r\n                    <Square\r\n                        key={id}\r\n                        cellIndex={id}\r\n                        gameOver={result.gameOver}\r\n                        symbol={symbol}\r\n                    />)\r\n                }\r\n            </div>\r\n            <Summary/>\r\n        </React.Fragment>\r\n    )\r\n});","import React from 'react';\nimport './App.css';\nimport Boards from './components/Board/Board'\n\nfunction App() {\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col col-md-6 offset-md-3'>\n                    <Boards/>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { DRAW_X, DRAW_O, RESET_GAME } from '../helpers/actionTypes';\r\n\r\nconst initialState = [...Array(9).keys()].map(() => '');\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n       case DRAW_X:\r\n           const stateByX = [...state];\r\n           stateByX[action.cellIndex] = stateByX[action.cellIndex] ? stateByX[action.cellIndex] : 'X';\r\n           return stateByX;\r\n       case DRAW_O:\r\n           const stateByO = [...state];\r\n           stateByO[action.cellIndex] = stateByO[action.cellIndex] ? stateByO[action.cellIndex] : 'O';\r\n           return stateByO;\r\n       case RESET_GAME:\r\n           return [...Array(9).keys()].map(() => '');\r\n       default:\r\n           return state;\r\n   }\r\n}","import { PLAYER_X, PLAYER_O, PLAYER_NAME, TURN } from '../helpers/actionTypes';\r\n\r\nconst initialState = {\r\n    player1: 'X',\r\n    player2: 'O',\r\n    player1_name: '',\r\n    player2_name: '',\r\n    turn: 'player1'\r\n}\r\n\r\nexport function playerReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case PLAYER_NAME:\r\n            return {\r\n                ...state,\r\n                [action.name]: action.value\r\n            }\r\n        case PLAYER_X:\r\n            if (action.player === 'player1') {\r\n                return {\r\n                    ...state,\r\n                    player1: 'X',\r\n                    player2: 'O'\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    player1: 'O',\r\n                    player2: 'X'\r\n                }\r\n            }\r\n        case PLAYER_O:\r\n            if (action.player === 'player2') {\r\n                return {\r\n                    ...state,\r\n                    player1: 'O',\r\n                    player2: 'X'\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    player1: 'X',\r\n                    player2: 'O'\r\n                }\r\n            }\r\n        case TURN:\r\n            if (state.turn === 'player1') return {...state, turn: 'player2'};\r\n            else return {...state, turn: 'player1'};\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { X_WINS, O_WINS, TIE, IN_PROGRESS, RESET_RESULT, START_GAME } from '../helpers/actionTypes';\r\n\r\nconst initialState = {\r\n    gameStart: false,\r\n    win: null,\r\n    winCombo: [],\r\n    tie: false,\r\n    gameOver: false\r\n};\r\n\r\nexport function resultReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case START_GAME:\r\n            return {\r\n                gameStart: true,\r\n                win: null,\r\n                winCombo: [],\r\n                tie: false,\r\n                gameOver: false\r\n            }\r\n        case X_WINS:\r\n            return {\r\n                gameStart: true,\r\n                win: 'X',\r\n                tie: false,\r\n                gameOver: true,\r\n                winCombo: [...action.payload]\r\n            }\r\n        case O_WINS:\r\n            return {\r\n                gameStart: true,\r\n                win: 'O',\r\n                tie: false,\r\n                gameOver: true,\r\n                winCombo: [...action.payload]\r\n            }\r\n        case TIE:\r\n            return {\r\n                gameStart: true,\r\n                win: null,\r\n                tie: true,\r\n                gameOver: true,\r\n                winCombo: []\r\n            }\r\n        case RESET_RESULT:\r\n            return {\r\n                gameStart: false,\r\n                win: null,\r\n                tie: false,\r\n                gameOver: false,\r\n                winCombo: []\r\n            }\r\n        case IN_PROGRESS:\r\n            return {\r\n                gameStart: true,\r\n                win: null,\r\n                tie: false,\r\n                gameOver: false,\r\n                winCombo: []\r\n            }\r\n        default: return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { boardReducer } from \"./boardReducer\";\r\nimport { playerReducer } from \"./playerReducer\";\r\nimport { resultReducer } from \"./resultReducer\";\r\n\r\nexport default combineReducers({\r\n    board: boardReducer,\r\n    players: playerReducer,\r\n    result: resultReducer\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n        }) : compose;\r\n//Store Creation:\r\n//1. RootReducer\r\n//2. Redux DevTool Enhancer\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n    // other store enhancers if any\r\n);\r\nexport default createStore(rootReducer, enhancer);\r\n\r\n\r\n\r\n// export default createStore(\r\n//     rootReducer,\r\n//     compose(\r\n//         applyMiddleware(thunk),\r\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//     )\r\n// );","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}