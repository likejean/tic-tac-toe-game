{"version":3,"sources":["assets/images/cross.png","assets/images/zero.png","components/Board/Square/Cross/Cross.js","components/Board/Square/Zero/Zero.js","components/Board/Square/Square.js","actions/boardAction.js","helpers/actionTypes.js","actions/playerAction.js","helpers/checkWins.js","components/Board/Summary/Summary.js","actions/resultsAction.js","components/Board/Inputs/PlayerNames.js","components/Board/Board.js","App.js","reducers/boardReducer.js","reducers/playerReducer.js","reducers/resultReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","props","className","src","cross","alt","zero","connect","board","players","dispatch","drawSymbol","cellIndex","turn","Promise","resolve","type","console","log","drawXAction","drawOAction","toggleTurnAction","symbol","gameOver","disabled","onClick","then","Cross","Zero","winsOptions","checkVictory","wins","i","length","result","checkGameResult","filter","win","tie","WinnerResult","player","player1","player2","style","width","marginLeft","Fragment","id","onChange","e","aria-label","aria-describedby","resetGame","resetResult","map","key","Summary","App","Board","initialState","Array","keys","combineReducers","state","action","stateByX","stateByO","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f257e9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.ed5887be.png\";","module.exports = __webpack_public_path__ + \"static/media/zero.8ab09cb2.png\";","import React from 'react';\r\nimport cross from '../../../../assets/images/cross.png'\r\nimport './style.css';\r\nexport default props => {\r\n    return (\r\n        <div className='cross symbol text-center'>\r\n            <img className='cross' src={cross} alt='cross'/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport zero from \"../../../../assets/images/zero.png\";\r\nimport './style.css';\r\nexport default props => {\r\n    return (\r\n        <div className='zero symbol text-center'>\r\n            <img className='zero' src={zero} alt='zero'/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Cross from './Cross/Cross';\r\nimport Zero from './Zero/Zero';\r\nimport { connect } from 'react-redux';\r\nimport { drawXAction, drawOAction } from \"../../../actions/boardAction\";\r\nimport {toggleTurnAction} from \"../../../actions/playerAction\";\r\n\r\nfunction Square (props) {\r\n\r\n    const { symbol, cellIndex, gameOver, drawSymbol, players, board, toggleTurnAction } = props;\r\n\r\n    const disabled = symbol || gameOver ? 'disabled' : '';\r\n    return (\r\n        <div\r\n            className={`cell ${disabled}`}\r\n            onClick={() => drawSymbol(board, players, cellIndex).then(() => {toggleTurnAction();})}\r\n        >\r\n            {symbol ?\r\n                !gameOver ?\r\n                    (symbol === 'X'\r\n                        ? <Cross />\r\n                        : <Zero />)\r\n                    : 'GAME OVER'\r\n                : ''\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ({ board, players }) => ({ board, players });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    drawSymbol: (board, players, cellIndex) => {\r\n        if (players[players.turn] === 'X') {\r\n            return dispatch(drawXAction(cellIndex));\r\n        }else{\r\n            return dispatch(drawOAction(cellIndex))\r\n        }\r\n    },\r\n    toggleTurnAction: () => dispatch(toggleTurnAction())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Square);\r\n\r\n\r\n\r\n","import { DRAW_X, DRAW_O, RESET_GAME } from \"../helpers/actionTypes\";\r\n\r\nexport function drawXAction(cellIndex) {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            dispatch({\r\n                type: DRAW_X,\r\n                cellIndex\r\n            });\r\n            resolve(() => console.log(resolve));\r\n        })\r\n    }\r\n};\r\n\r\nexport function drawOAction(cellIndex) {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            dispatch({\r\n                type: DRAW_O,\r\n                cellIndex\r\n            });\r\n            resolve(() => console.log(resolve));\r\n        })\r\n    }\r\n};\r\n\r\nexport function resetGame() {\r\n    return dispatch => {\r\n        return new Promise(resolve => {\r\n            dispatch({\r\n                type: RESET_GAME\r\n            });\r\n            resolve(() => console.log(resolve));\r\n        })\r\n    }\r\n};","export const DRAW_X = 'DRAW_X';\r\nexport const DRAW_O = 'DRAW_O';\r\nexport const RESET_GAME = 'RESET_GAME';\r\n\r\nexport const PLAYER_X = 'PLAYER_X';\r\nexport const PLAYER_O = 'PLAYER_O';\r\nexport const TURN = 'TURN';\r\n\r\nexport const X_WINS = 'X_WINS';\r\nexport const O_WINS = 'Y_WINS';\r\nexport const TIE = 'TIE';\r\nexport const IN_PROGRESS = 'IN_PROGRESS';\r\nexport const RESET_RESULT = 'RESET_RESULT';\r\n","import { PLAYER_X, PLAYER_O, TURN } from '../helpers/actionTypes';\r\n\r\nexport function selectXPlayerAction(player) {\r\n    return {\r\n        type: PLAYER_X,\r\n        player\r\n    }\r\n};\r\n\r\nexport function selectOPlayerAction(player) {\r\n    return {\r\n        type: PLAYER_O,\r\n        player\r\n    }\r\n};\r\n\r\nexport function toggleTurnAction() {\r\n    return {\r\n        type: TURN\r\n    }\r\n};\r\n\r\n\r\n","export const winsOptions = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n];\r\n\r\n\r\nexport const checkVictory = (wins, board, symbol) => {\r\n    for (let i = 0; i < wins.length; i++){\r\n        if (board[wins[i][0]] === symbol && board[wins[i][1]] === symbol && board[wins[i][2]] === symbol) return true;\r\n    }\r\n    return false;\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport cross from '../../../assets/images/cross.png';\r\nimport zero from '../../../assets/images/zero.png';\r\nimport { checkGameResult } from \"../../../actions/resultsAction\";\r\n\r\n\r\nexport default connect(\r\n    ({board, players, result}) => ({board, players, result}),\r\n    dispatch => ({ checkGameResult: board => dispatch(checkGameResult(board))})\r\n)\r\n(props => {\r\n    const {players, result, board, checkGameResult} = props;\r\n    if (!(result.win || result.tie)) checkGameResult(board);\r\n\r\n    const WinnerResult = () => {\r\n        if (!result.tie && result.win === null) return null;\r\n        else {\r\n            if (result.tie) {\r\n                return <div className='alert alert-success mt-2'>It's DRAW</div>\r\n            } else {\r\n                if (result.win === 'X') {\r\n                    const player = players.player1 === 'X' ?\r\n                        <span className=\"badge badge-pill badge-primary\">Player 1</span>\r\n                        :\r\n                        <span className=\"badge badge-pill badge-danger\">Player 2</span>;\r\n                    return <div className='alert alert-success mt-2'>{player} WINS!</div>\r\n                } else if (result.win === 'O') {\r\n                    const player = players.player2 === 'O' ?\r\n                        <span className=\"badge badge-pill badge-danger\">Player 2</span>\r\n                        :\r\n                        <span className=\"badge badge-pill badge-primary\">Player 1</span>;\r\n                    return <div className='alert alert-success mt-2'>{player} WINS!</div>\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"players-info mt-6\">\r\n            <div className=\"col\">\r\n                <p>\r\n                    <span className=\"badge badge-pill badge-primary\">\r\n                        <strong>Player 1</strong>:\r\n                    </span> {players.player1 === 'X' &&\r\n                <img style={{width: 50, marginLeft: 40}} src={cross} alt='cross'/>}\r\n                </p>\r\n                <p><span className=\"badge badge-pill badge-danger\">\r\n                            <strong>Player 2</strong>:\r\n                        </span> {players.player2 === 'O' &&\r\n                <img style={{width: 50, marginLeft: 40}} src={zero} alt='zero'/>}\r\n                </p>\r\n                <p>\r\n                    <span className=\"badge badge-xl badge-pill badge-light\">\r\n                        <strong>Who's Turn</strong>:\r\n                    </span>{players.turn === 'player1'\r\n                    ?\r\n                    <span className=\"badge badge-pill badge-primary\">Player 1</span>\r\n                    :\r\n                    <span className=\"badge badge-pill badge-danger\">Player 2</span>\r\n                }\r\n                </p>\r\n                <WinnerResult/>\r\n            </div>\r\n        </div>\r\n    )\r\n});","import { X_WINS, O_WINS, TIE, RESET_RESULT } from '../helpers/actionTypes';\r\nimport  { checkVictory, winsOptions } from '../helpers/checkWins';\r\n\r\nexport function checkGameResult(board) {\r\n\r\n    if(checkVictory(winsOptions, board, 'X')) {\r\n        return {\r\n            type: X_WINS\r\n        }\r\n    }else if(checkVictory(winsOptions, board, 'O')) {\r\n        return {\r\n            type: O_WINS\r\n        }\r\n    }else{\r\n        const checkBlanks = board.filter(symbol => symbol === '');\r\n        if (checkBlanks.length === 0){\r\n            return {\r\n                type: TIE\r\n            }\r\n        }\r\n        else {\r\n            return {\r\n                type: 'VOID'\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport function resetResult() {\r\n    return {\r\n        type: RESET_RESULT\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './style.css';\r\n\r\n\r\nexport default connect()(() => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className='container inputs'>\r\n                <div className='row'>\r\n                    <div className=\"col-6 input-group input-group-md mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Player 1</span>\r\n                        </div>\r\n                        <input\r\n                            type=\"text\"\r\n                            id='player1'\r\n                            className=\"form-control\"\r\n                            onChange={e => {\r\n                                {\r\n                                    {}\r\n                                }\r\n                            }}\r\n                            aria-label=\"Sizing example input\"\r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-6 input-group input-group-md mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Player 2</span>\r\n                        </div>\r\n                        <input\r\n                            type=\"text\"\r\n                            id='player2'\r\n                            className=\"form-control\"\r\n                            onChange={e => {\r\n                                {}\r\n                            }}\r\n                            aria-label=\"Sizing example input\"\r\n                            aria-describedby=\"inputGroup-sizing-sm\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n});","import React from 'react';\r\nimport './style.css';\r\nimport {connect} from 'react-redux';\r\nimport Square from './Square/Square';\r\nimport Summary from '../Board/Summary/Summary';\r\nimport Inputs from '../Board/Inputs/PlayerNames';\r\nimport {resetGame} from '../../actions/boardAction';\r\nimport {resetResult} from '../../actions/resultsAction';\r\n\r\nexport default connect(({board, result}) => ({board, result}),\r\n    dispatch => (\r\n        {\r\n            resetGame: () => dispatch(resetGame()),\r\n            resetResult: () => dispatch(resetResult())\r\n        }\r\n    )\r\n)(props => {\r\n    //Get this from redux...\r\n    const {board, result, resetGame, resetResult} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Inputs/>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <button type=\"button\" onClick={() => resetGame().then(() => {resetResult();})} className=\"reset btn btn-outline-dark\">RESET GAME</button>\r\n                </div>\r\n            </div>\r\n            <div id='board' className='mt-5 d-flex flex-wrap'>\r\n                {board.map((symbol, id) => <Square key={id} cellIndex={id} gameOver={result.gameOver}\r\n                                                   symbol={symbol}/>)}\r\n            </div>\r\n            <Summary/>\r\n        </React.Fragment>\r\n    )\r\n});","import React from 'react';\nimport './App.css';\nimport Boards from './components/Board/Board'\n\nfunction App() {\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col col-md-6 offset-md-3'>\n                    <Boards/>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { DRAW_X, DRAW_O, RESET_GAME } from '../helpers/actionTypes';\r\n\r\nconst initialState = [...Array(9).keys()].map(() => '');\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n       case DRAW_X:\r\n           const stateByX = [...state];\r\n           stateByX[action.cellIndex] = stateByX[action.cellIndex] ? stateByX[action.cellIndex] : 'X';\r\n           return stateByX;\r\n       case DRAW_O:\r\n           const stateByO = [...state];\r\n           stateByO[action.cellIndex] = stateByO[action.cellIndex] ? stateByO[action.cellIndex] : 'O';\r\n           return stateByO;\r\n       case RESET_GAME:\r\n           return [...Array(9).keys()].map(() => '');\r\n       default:\r\n           return state;\r\n   }\r\n}","import {PLAYER_X, PLAYER_O, TURN} from '../helpers/actionTypes';\r\n\r\nconst initialState = {\r\n    player1: 'X',\r\n    player2: 'O',\r\n    turn: 'player1'\r\n}\r\n\r\nexport function playerReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case PLAYER_X:\r\n            if (action.player === 'player1') {\r\n                return {\r\n                    ...state,\r\n                    player1: 'X',\r\n                    player2: 'O'\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    player1: 'O',\r\n                    player2: 'X'\r\n                }\r\n            }\r\n        case PLAYER_O:\r\n            if (action.player === 'player2') {\r\n                return {\r\n                    ...state,\r\n                    player1: 'O',\r\n                    player2: 'X'\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    player1: 'X',\r\n                    player2: 'O'\r\n                }\r\n            }\r\n        case TURN:\r\n            if (state.turn === 'player1') return {...state, turn: 'player2'};\r\n            else return {...state, turn: 'player1'};\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import {X_WINS, O_WINS, TIE, IN_PROGRESS, RESET_RESULT} from '../helpers/actionTypes';\r\n\r\nconst initialState = {\r\n    win: null,\r\n    tie: false,\r\n    gameOver: false\r\n};\r\n\r\nexport function resultReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case X_WINS:\r\n            return {\r\n                win: 'X',\r\n                tie: false,\r\n                gameOver: true\r\n            }\r\n        case O_WINS:\r\n            return {\r\n                win: 'O',\r\n                tie: false,\r\n                gameOver: true\r\n            }\r\n        case TIE:\r\n            return {\r\n                win: null,\r\n                tie: true,\r\n                gameOver: true\r\n            }\r\n        case RESET_RESULT:\r\n            return {\r\n                win: null,\r\n                tie: false,\r\n                gameOver: false\r\n            }\r\n        case IN_PROGRESS:\r\n            return {\r\n                win: null,\r\n                tie: false,\r\n                gameOver: false\r\n            }\r\n        default: return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { boardReducer } from \"./boardReducer\";\r\nimport { playerReducer } from \"./playerReducer\";\r\nimport { resultReducer } from \"./resultReducer\";\r\n\r\nexport default combineReducers({\r\n    board: boardReducer,\r\n    players: playerReducer,\r\n    result: resultReducer\r\n});","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n//Store Creation:\r\n//1. RootReducer\r\n//2. Redux DevTool Enhancer\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}