{"version":3,"sources":["assets/images/cross.png","assets/images/zero.png","components/Board/Square/Cross/Cross.js","components/Board/Square/Zero/Zero.js","helpers/checkWins.js","components/Board/Square/Square.js","actions/boardAction.js","helpers/actionTypes.js","actions/resultsAction.js","actions/playerAction.js","components/Board/Summary/Summary.js","components/Board/Board.js","App.js","reducers/boardReducer.js","reducers/playerReducer.js","reducers/resultReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","props","className","src","cross","alt","zero","winsOptions","checkVictory","wins","board","symbol","i","length","connect","players","dispatch","drawSymbol","cellIndex","turn","type","drawXAction","drawOAction","console","log","checkGameResult","disabled","onClick","Cross","Zero","result","player1","style","width","marginLeft","player2","tie","win","player","winnerResult","Fragment","id","map","key","Summary","App","Board","initialState","Array","keys","combineReducers","state","action","stateByX","stateByO","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f78dbb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.ed5887be.png\";","module.exports = __webpack_public_path__ + \"static/media/zero.8ab09cb2.png\";","import React from 'react';\r\nimport cross from '../../../../assets/images/cross.png'\r\nimport './style.css';\r\nexport default props => {\r\n    return (\r\n        <div className='cross symbol text-center'>\r\n            <img className='cross' src={cross} alt='cross'/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport zero from \"../../../../assets/images/zero.png\";\r\nimport './style.css';\r\nexport default props => {\r\n    return (\r\n        <div className='zero symbol text-center'>\r\n            <img className='zero' src={zero} alt='zero'/>\r\n        </div>\r\n    )\r\n}","export const winsOptions = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n];\r\n\r\nexport const checkVictory = (wins, board, symbol) => {\r\n    for (let i = 0; i < wins.length; i++){\r\n        if (board[wins[i][0]] === symbol && board[wins[i][1]] === symbol && board[wins[i][2]] === symbol) return true;\r\n    }\r\n    return false;\r\n};","import React from 'react';\r\nimport Cross from './Cross/Cross';\r\nimport Zero from './Zero/Zero';\r\nimport { connect } from 'react-redux';\r\nimport { drawXAction, drawOAction } from \"../../../actions/boardAction\";\r\nimport {toggleTurnAction} from \"../../../actions/playerAction\";\r\nimport {checkGameResult} from \"../../../actions/resultsAction\";\r\n\r\n\r\n\r\nfunction Square (props) {\r\n\r\n    const { symbol, cellIndex, drawSymbol, players, board } = props;\r\n    console.log('board',board)\r\n    const disabled = symbol ? 'disabled' : '';\r\n    return (\r\n        <div\r\n            className={`cell ${disabled}`}\r\n            onClick={() => drawSymbol(board, players, cellIndex)}\r\n        >\r\n            {symbol ?\r\n                (symbol === 'X'\r\n                    ? <Cross />\r\n                    : <Zero />)\r\n                : ''\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = ({ board, players }) => ({ board, players });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    drawSymbol: (board, players, cellIndex) => {\r\n        if (players[players.turn] === 'X') {\r\n            dispatch(drawXAction(cellIndex));\r\n        }else {\r\n            dispatch(drawOAction(cellIndex))\r\n        }\r\n        // const check = board.filter(symbol => symbol === \"\");\r\n        // if(check.length === 1)\r\n        console.log('mapping',board)\r\n        dispatch(checkGameResult(board));\r\n        dispatch(toggleTurnAction());\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Square);\r\n\r\n\r\n\r\n","import { DRAW_X, DRAW_O } from \"../helpers/actionTypes\";\r\n\r\nexport function drawXAction(cellIndex) {\r\n    return {\r\n        type: DRAW_X,\r\n        cellIndex\r\n    }\r\n};\r\n\r\nexport function drawOAction(cellIndex) {\r\n    return {\r\n        type: DRAW_O,\r\n        cellIndex\r\n    }\r\n};","export const DRAW_X = 'DRAW_X';\r\nexport const DRAW_O = 'DRAW_O';\r\n\r\nexport const PLAYER_X = 'PLAYER_X';\r\nexport const PLAYER_O = 'PLAYER_O';\r\nexport const TURN = 'TURN';\r\n\r\nexport const X_WINS = 'X_WINS';\r\nexport const O_WINS = 'Y_WINS';\r\nexport const TIE = 'TIE';\r\n","import { X_WINS, O_WINS, TIE } from '../helpers/actionTypes';\r\nimport  { checkVictory, winsOptions } from '../helpers/checkWins';\r\n\r\nexport function checkGameResult(board) {\r\n    console.log(board);\r\n    if(checkVictory(winsOptions, board, 'X')) {\r\n        return {\r\n            type: X_WINS\r\n        }\r\n    }else if(checkVictory(winsOptions, board, 'O')) {\r\n        return {\r\n            type: O_WINS\r\n        }\r\n    }else{\r\n        return {\r\n            type: TIE\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { PLAYER_X, PLAYER_O, TURN } from '../helpers/actionTypes';\r\n\r\nexport function selectXPlayerAction(player) {\r\n    return {\r\n        type: PLAYER_X,\r\n        player\r\n    }\r\n};\r\n\r\nexport function selectOPlayerAction(player) {\r\n    return {\r\n        type: PLAYER_O,\r\n        player\r\n    }\r\n};\r\n\r\nexport function toggleTurnAction() {\r\n    return {\r\n        type: TURN\r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport cross from '../../../assets/images/cross.png';\r\nimport zero from '../../../assets/images/zero.png';\r\n\r\nexport default connect(({players, result}) => ({players, result}))(props => {\r\n    const {players, result} = props;\r\n    console.log('RESULT', result)\r\n    const winnerResult = () => {\r\n        if (!result.tie && result.win === null) return null;\r\n        else {\r\n            if (result.tie) {\r\n                return <div className='alert alert-success mt-2'>It's DRAW</div>\r\n            } else {\r\n                if (result.win === 'X') {\r\n                    const player = players.player1 === 'X' ?\r\n                        <span className=\"badge badge-pill badge-primary\">Player 1</span>\r\n                        :\r\n                        <span className=\"badge badge-pill badge-danger\">Player 2</span>;\r\n                    return <div className='alert alert-success mt-2'>{player} WINS!</div>\r\n                } else if (result.win === 'O') {\r\n                    const player = players.player2 === 'O' ?\r\n                        <span className=\"badge badge-pill badge-danger\">Player 2</span>\r\n                        :\r\n                        <span className=\"badge badge-pill badge-primary\">Player 1</span>;\r\n                    return <div className='alert alert-success mt-2'>{player} WINS!</div>\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"players-info mt-6\">\r\n\r\n            <div className=\"col\">\r\n                <p>\r\n                    <span className=\"badge badge-pill badge-primary\">\r\n                        <strong>Player 1</strong>:\r\n                    </span> {players.player1 === 'X' &&\r\n                <img style={{width: 50, marginLeft: 40}} src={cross} alt='cross'/>}\r\n                </p>\r\n                <p><span className=\"badge badge-pill badge-danger\">\r\n                            <strong>Player 2</strong>:\r\n                        </span> {players.player2 === 'O' &&\r\n                <img style={{width: 50, marginLeft: 40}} src={zero} alt='zero'/>}\r\n                </p>\r\n                <p>\r\n                    <span className=\"badge badge-xl badge-pill badge-light\">\r\n                        <strong>Who's Turn</strong>:\r\n                    </span>{players.turn === 'player1'\r\n                    ?\r\n                    <span className=\"badge badge-pill badge-primary\">Player 1</span>\r\n                    :\r\n                    <span className=\"badge badge-pill badge-danger\">Player 2</span>\r\n                }\r\n                </p>\r\n                {winnerResult()}\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from 'react';\r\nimport './style.css';\r\nimport {connect} from 'react-redux';\r\nimport Square from './Square/Square';\r\nimport Summary from '../Board/Summary/Summary';\r\n\r\nexport default connect(({ board }) => ({ board }))(props => {\r\n    //Get this from redux...\r\n    const { board } = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div id='board' className='mt-5 d-flex flex-wrap'>\r\n                {board.map((symbol, id) => <Square key={id} cellIndex={id} symbol={symbol}/>)}\r\n            </div>\r\n            <Summary/>\r\n\r\n        </React.Fragment>\r\n    )\r\n});","import React from 'react';\nimport './App.css';\nimport Boards from './components/Board/Board'\n\nfunction App() {\n    return (\n        <div className='container'>\n            <div className='row'>\n                <div className='col col-md-6 offset-md-3'>\n                    <Boards/>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { DRAW_X, DRAW_O } from '../helpers/actionTypes';\r\n\r\n\r\nconst initialState = [...Array(9).keys()].map(() => '');\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n   switch(action.type) {\r\n       case DRAW_X:\r\n           const stateByX = [...state];\r\n           stateByX[action.cellIndex] = stateByX[action.cellIndex] ? stateByX[action.cellIndex] : 'X';\r\n           return stateByX;\r\n       case DRAW_O:\r\n           const stateByO = [...state];\r\n           stateByO[action.cellIndex] = stateByO[action.cellIndex] ? stateByO[action.cellIndex] : 'O';\r\n           return stateByO;\r\n       default:\r\n           return state;\r\n   }\r\n}","import {PLAYER_X, PLAYER_O, TURN} from '../helpers/actionTypes';\r\n\r\nconst initialState = {\r\n    player1: 'X',\r\n    player2: 'O',\r\n    turn: 'player1'\r\n}\r\n\r\nexport function playerReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case PLAYER_X:\r\n            if (action.player === 'player1') {\r\n                return {\r\n                    ...state,\r\n                    player1: 'X',\r\n                    player2: 'O'\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    player1: 'O',\r\n                    player2: 'X'\r\n                }\r\n            }\r\n        case PLAYER_O:\r\n            if (action.player === 'player2') {\r\n                return {\r\n                    ...state,\r\n                    player1: 'O',\r\n                    player2: 'X'\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    player1: 'X',\r\n                    player2: 'O'\r\n                }\r\n            }\r\n        case TURN:\r\n            if (state.turn === 'player1') return {...state, turn: 'player2'};\r\n            else return {...state, turn: 'player1'};\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { X_WINS, O_WINS, TIE } from '../helpers/actionTypes';\r\n\r\nconst initialState = {\r\n    win: null,\r\n    tie: false\r\n};\r\n\r\nexport function resultReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case X_WINS:\r\n            return {\r\n                win: 'X',\r\n                tie: false\r\n            }\r\n        case O_WINS:\r\n            return {\r\n                win: 'O',\r\n                tie: false\r\n            }\r\n        case TIE:\r\n            return {\r\n                win: null,\r\n                tie: true\r\n            }\r\n        default: return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { boardReducer } from \"./boardReducer\";\r\nimport { playerReducer } from \"./playerReducer\";\r\nimport { resultReducer } from \"./resultReducer\";\r\n\r\nexport default combineReducers({\r\n    board: boardReducer,\r\n    players: playerReducer,\r\n    result: resultReducer\r\n});","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\n//Store Creation:\r\n//1. RootReducer\r\n//2. Redux DevTool Enhancer\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}